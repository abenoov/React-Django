{"ast":null,"code":"var _jsxFileName = \"/Users/alikhan/Desktop/shop-front-endd/src/components/auth/signupModal.js\";\nimport React, { Component } from 'react';\nimport { Menu, Icon, Modal, Button, Form, Input } from 'antd';\nimport { signupUser } from '../../store/actions/authActions';\nimport { connect } from 'react-redux';\n\nclass SignUpModal extends Component {\n  constructor(...args) {\n    super(...args);\n\n    this.handleSubmit = e => {\n      e.preventDefault();\n      this.props.form.validateFields((err, values) => {\n        if (!err) {\n          this.props.signupUser(values);\n        }\n      });\n    };\n  }\n\n  render() {\n    const getFieldDecorator = this.props.form.getFieldDecorator;\n    return React.createElement(Modal, {\n      visible: this.props.openSignUp,\n      title: \"Sign Up\",\n      onCancel: this.props.onClose,\n      footer: null,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 19\n      },\n      __self: this\n    }, React.createElement(Form, {\n      onSubmit: this.handleSubmit,\n      className: \"login-form\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25\n      },\n      __self: this\n    }, React.createElement(Form.Item, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26\n      },\n      __self: this\n    }, getFieldDecorator('username', {\n      rules: [{\n        required: true,\n        message: 'Please input your username!'\n      }]\n    })(React.createElement(Input, {\n      prefix: React.createElement(Icon, {\n        type: \"user\",\n        style: {\n          color: 'rgba(0,0,0,.25)'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31\n        },\n        __self: this\n      }),\n      placeholder: \"Username\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30\n      },\n      __self: this\n    }))), React.createElement(Form.Item, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36\n      },\n      __self: this\n    }, getFieldDecorator('password', {\n      rules: [{\n        required: true,\n        message: 'Please input your Password!'\n      }]\n    })(React.createElement(Input, {\n      prefix: React.createElement(Icon, {\n        type: \"lock\",\n        style: {\n          color: 'rgba(0,0,0,.25)'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41\n        },\n        __self: this\n      }),\n      type: \"password\",\n      placeholder: \"Password\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    }))), React.createElement(Form.Item, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }, React.createElement(Button, {\n      type: \"primary\",\n      htmlType: \"submit\",\n      className: \"login-form-button\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }, \"Sign Up\"), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }), \"Or \", React.createElement(\"a\", {\n      href: \"\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }, \"login now!\"))));\n  }\n\n}\n\nconst WrapperSignUpModal = Form.create({\n  name: 'signup_modal'\n})(SignUpModal);\nexport default connect(null, {\n  signupUser\n})(WrapperSignUpModal);","map":{"version":3,"sources":["/Users/alikhan/Desktop/shop-front-endd/src/components/auth/signupModal.js"],"names":["React","Component","Menu","Icon","Modal","Button","Form","Input","signupUser","connect","SignUpModal","handleSubmit","e","preventDefault","props","form","validateFields","err","values","render","getFieldDecorator","openSignUp","onClose","rules","required","message","color","WrapperSignUpModal","create","name"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport { Menu, Icon, Modal, Button, Form, Input } from 'antd'\nimport {signupUser} from '../../store/actions/authActions'\nimport {connect} from 'react-redux'\n\nclass SignUpModal extends Component {\n    handleSubmit = e => {\n        e.preventDefault();\n        this.props.form.validateFields((err, values) => {\n            if (!err) {\n                this.props.signupUser(values)\n            }\n        });\n    };\n\n    render() {\n    const { getFieldDecorator } = this.props.form\n    return (\n        <Modal\n                visible={this.props.openSignUp}\n                title=\"Sign Up\"\n                onCancel={this.props.onClose}\n                footer={null}\n            >\n                <Form onSubmit={this.handleSubmit} className=\"login-form\">\n                    <Form.Item>\n                    {getFieldDecorator('username', {\n                        rules: [{ required: true, message: 'Please input your username!' }],\n                    })(\n                        <Input\n                        prefix={<Icon type=\"user\" style={{ color: 'rgba(0,0,0,.25)' }} />}\n                        placeholder=\"Username\"\n                        />,\n                    )}\n                    </Form.Item>\n                    <Form.Item>\n                    {getFieldDecorator('password', {\n                        rules: [{ required: true, message: 'Please input your Password!' }],\n                    })(\n                        <Input\n                        prefix={<Icon type=\"lock\" style={{ color: 'rgba(0,0,0,.25)' }} />}\n                        type=\"password\"\n                        placeholder=\"Password\"\n                        />,\n                    )}\n                    </Form.Item>\n                    <Form.Item>\n                    <Button type=\"primary\" htmlType=\"submit\" className=\"login-form-button\">\n                        Sign Up\n                    </Button>\n                    <br/> \n                    Or <a href=\"\">login now!</a>\n                    </Form.Item>\n                </Form>\n            </Modal>\n    )\n                    }\n}\n\nconst WrapperSignUpModal =  Form.create({ name: 'signup_modal' })(SignUpModal)\nexport default connect(null, {signupUser})(WrapperSignUpModal)"]},"metadata":{},"sourceType":"module"}